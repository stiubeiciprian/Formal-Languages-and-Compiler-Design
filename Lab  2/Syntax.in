program = statementList
statementList = statement | statement "newLine" statementList

statement = simpleStatement | structStatement
compoundStatement = "tab" statement | "newLine" compoundStatement

simpleStatement = variableDeclarationStatement | assignmentStatement | printStatement | readStatement
variableDeclarationStatement = type identifier { "=" expression }
assignmentStatement = identifier "=" expression
printStatement = "print(" (identifier|constant|expression) ")" 
readStatement = "input(" constant ")"

basicType = "int" | "char" | "string" | "bool"
arrayType = basicType "[" nr "]"
type  = basicType | arrayType


expression = arithmeticExpression | logicExpression | relationalExpression
condition = logicExpression | relationalExpression | identifier | "True" | "False"

arithmeticExpression = arithmeticExpression ("+" | "-") term | term
term = term ("*" | "/") factor | factor
factor = "(" arithmeticExpression ")" | identifier

logicExpression = expression ("or" | "and") expression
relationalExpression = arithmeticExpression relation arithmeticExpression
relation = "<" | "<=" | "==" | "!=" | ">=" | ">"

structStatement = compoundStatement | ifStatement | whileStatement | forStatement
ifStatement = "if" condition ":" statement ["else:" statement] | 
whileStatement = "while" condition ":" statement
forStatement = "for" (variableDeclarationStatement | assignmentStatement) "," condition "," assignmentStatement ":" statement



